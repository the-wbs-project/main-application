# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Site Builder - Production

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "./utilities" # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: "6.0.x" # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

on:
  push:
    branches: ["main"]

jobs:
  site_job:
    name: Site Deployment
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.13.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Setup Environment
        run: npm config set "@fortawesome:registry" https://npm.fontawesome.com/ && npm config set "//npm.fontawesome.com/:_authToken" $FA_TOKEN
        env:
          FA_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
      - name: Install Packages
        run: yarn --cwd site run setup
        env:
          FA_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}
      - name: Build Site
        run: yarn --cwd site run publish
      - name: Publish Site
        uses: cloudflare/pages-action@1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: "wbs-app-v0-1-prod"
          directory: "dist"
          branch: main
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  worker_api_job:
    name: API Worker Deployment
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.13.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install Packages
        run: yarn --cwd workers/api run setup
      - name: Build Worker
        run: yarn --cwd workers/api run build
      - name: Publish Worker
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: workers/api
          command: publish --env prod
          postCommands: |
            echo $MAILGUN_API_KEY | wrangler secret put MAILGUN_API_KEY --env prod
            echo $MAILGUN_API_BASE_URL | wrangler secret put MAILGUN_API_BASE_URL --env prod
            echo $COSMOS | wrangler secret put COSMOS --env prod
            echo $AZURE | wrangler secret put AZURE --env prod
            echo $AUTH | wrangler secret put AUTH --env prod

        env:
          MAILGUN_API_KEY: ${{ secrets.CFW_MAILGUN_API_KEY }}
          MAILGUN_API_BASE_URL: ${{ secrets.CFW_MAILGUN_API_BASE_URL }}
          COSMOS: ${{ secrets.CFW_PROD_COSMOS }}
          AZURE: ${{ secrets.CFW_PROD_AZURE }}
          AUTH: ${{ secrets.CFW_PROD_AUTH }}

  azure_job:
    name: Azure Functions Deployment
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: "wbs-v0-1-prod"
          package: "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output"
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_32A51C7A717A47D7BD9CB683567BB441 }}
