# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

jobs:
  - job: azure_job
    displayName: Azure Functions
    dependsOn: worker_job
    steps:
      - task: DotNetCoreCLI@2
        inputs:
          command: "publish"
          publishWebProjects: false
          projects: "./_other/utilities/utilities.csproj"
          arguments: "-o ./_other/utilities/dist"
          zipAfterPublish: false
          modifyOutputPath: true
        displayName: "Build Azure Functions"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "_other/utilities/dist"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Azure.zip"
          replaceExistingArchive: true
        displayName: "Zip Azure"

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
        displayName: "Publish Worker"

  - job: worker_job
    displayName: Worker
    dependsOn: site_job
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "18.10"
        displayName: "Install Node.js"

      - script: |
          yarn global add esbuild
        displayName: "Install ES Build"

      - script: yarn
        workingDirectory: "worker"
        displayName: "Install Worker Packages"

      - script: yarn run build
        workingDirectory: "worker"
        displayName: "Build Worker"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "worker"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Worker.zip"
          replaceExistingArchive: true
        displayName: "Zip Worker"

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
        displayName: "Publish Worker"

  - job: site_job
    displayName: Site
    steps:
      - task: Cache@2
        inputs:
          key: 'yarn | "$(Agent.OS)" | yarn.lock'
          restoreKeys: |
            yarn | "$(Agent.OS)"
            yarn
          path: $(YARN_CACHE_FOLDER)
        displayName: Cache Yarn packages

      - script: |
          echo "$(FA_LICENSE)"
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/ && npm config set "//npm.fontawesome.com/:_authToken" $(FA_LICENSE)
        workingDirectory: "site"
        env:
          FA_LICENSE: $(FA_LICENSE)
        displayName: "Setup - Font Awesome Registry"

      - script: yarn global add @angular/cli
        displayName: "Setup - Angular CLI"

      - script: yarn
        workingDirectory: "site"
        displayName: "Setup - Site Packages"

      - script: npx kendo-ui-license activate
        workingDirectory: "site"
        env:
          KENDO_UI_LICENSE: $(KENDO_UI_LICENSE)
        displayName: "Setup - Kendo UI License"

      - script: yarn run deploy:qa
        workingDirectory: "site"
        displayName: "QA - Build"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "dist"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-QA.zip"
          replaceExistingArchive: true
        displayName: "QA - Zip"

      - script: yarn run deploy:prod
        workingDirectory: "site"
        displayName: "Production - Build"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "dist"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Prod.zip"
          replaceExistingArchive: true
        displayName: "Production - Zip"

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
        displayName: "Publish"

  - job: resource_job
    displayName: Resources
    steps:
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "_other/data/files/resources-*.json"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Resources.zip"
          replaceExistingArchive: true
        displayName: "Zip"

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
        displayName: "Publish"
