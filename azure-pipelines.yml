# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

pool:
  vmImage: ubuntu-latest

jobs:
  - job: setup_job
    displayName: Setup
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "18.10"
        displayName: "Install Node.js"

  - job: worker_job
    displayName: Worker
    dependsOn: setup_job
    steps:
      - script: |
          yarn global add esbuild
        displayName: "Install ES Build"

      - script: yarn
        workingDirectory: "worker"
        displayName: "Install Worker Packages"

      - script: yarn run build
        workingDirectory: "worker"
        displayName: "Build Worker"

  - job: site_job
    displayName: Site
    dependsOn: worker_job
    steps:
      - script: |
          echo "$(FA_LICENSE)"
          npm config set "@fortawesome:registry" https://npm.fontawesome.com/ && npm config set "//npm.fontawesome.com/:_authToken" $(FA_LICENSE)
        workingDirectory: "site"
        env:
          FA_LICENSE: $(FA_LICENSE)
        displayName: "Setup Font Awesome Registry"
      - script: yarn global add @angular/cli
        displayName: "Install Angular CLI"

      - script: yarn
        workingDirectory: "site"
        displayName: "Install Site Packages"

      - script: npx kendo-ui-license activate
        workingDirectory: "site"
        env:
          KENDO_UI_LICENSE: $(KENDO_UI_LICENSE)
        displayName: "Setup Kendo UI License"

      - script: yarn run deploy:qa
        workingDirectory: "site"
        displayName: "Build QA"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'worker'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-QA.zip'
          replaceExistingArchive: true
        displayName: "Zip QA"
        
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-QA.zip'
          artifact: 'drop'
          publishLocation: 'pipeline'
        displayName: "Publish QA"

      - script: yarn run deploy:prod
        workingDirectory: "site"
        displayName: "Build Prod"

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: 'worker'
          includeRootFolder: false
          archiveType: 'zip'
          archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Prod.zip'
          replaceExistingArchive: true
        displayName: "Zip Production"
        
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-Prod.zip'
          artifact: 'drop'
          publishLocation: 'pipeline'
        displayName: "Publish Production"